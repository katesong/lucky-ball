package com.timesaver.luckyball;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;
import java.math.RoundingMode;

import lombok.val;

public class TempTest {

    @Test
    public void test() {
        val expected = "1753,2020,2027,1804,2022,1807,1810,1813,1816,1819,1821,1823,1825,2024,1828,1829,1831,1833,1835,1837,1839,1754,1755,1757,1760,1764,1765,1767,1770,1774,1775,1777,1780,1784,1785,1787,1790,1794,1795,1797,1800,1841,1842,1853,1854,2019,2026,2123,2124,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2028,2028,2028,2028,2028,2028,2028,2028,2023,2023,1805,1805,1805,1805,1805,1805,1805,1805,1805,1805,2025,2025,2025,2025,1806,1806,1806,1806,1808,1808,1808,1808,1808,1808,1808,1808,1808,1808,1809,1809,1809,1809,1811,1811,1811,1811,1811,1811,1811,1811,1811,1811,1812,1812,1812,1812,1814,1814,1814,1814,1814,1814,1814,1814,1814,1814,1815,1815,1815,1815,1817,1817,1817,1817,1817,1817,1817,1817,1817,1817,1818,1818,1818,1818,1820,1820,1820,1820,1820,1822,1822,1822,1822,1822,1824,1824,1824,1824,1824,1826,1826,1826,1826,1827,1827,1827,1830,1830,1830,1830,1832,1832,1832,1832,1834,1834,1834,1834,1836,1836,1836,1836,1838,1838,1838,1838,1840,1840,1840,1840,1756,1756,1756,1756,1756,1756,1756,1756,1756,1756,1758,1758,1758,1758,1759,1759,1759,1759,1761,1761,1761,1761,1761,1762,1762,1762,1762,1762,1763,1763,1763,1763,1763,1766,1766,1766,1766,1766,1766,1766,1766,1766,1766,1768,1768,1768,1768,1769,1769,1769,1769,1771,1771,1771,1771,1771,1772,1772,1772,1772,1772,1773,1773,1773,1773,1773,1776,1776,1776,1776,1776,1776,1776,1776,1776,1776,1778,1778,1778,1778,1779,1779,1779,1779,1781,1781,1781,1781,1781,1782,1782,1782,1782,1782,1783,1783,1783,1783,1783,1786,1786,1786,1786,1786,1786,1786,1786,1786,1786,1788,1788,1788,1788,1789,1789,1789,1789,1791,1791,1791,1791,1791,1792,1792,1792,1792,1792,1793,1793,1793,1793,1793,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1798,1798,1798,1798,1799,1799,1799,1799,1801,1801,1801,1801,1801,1802,1802,1802,1802,1802,1803,1803,1803,1803,1803,1843,1843,1843,1844,1844,1844,1845,1845,1845,1846,1846,1846,1847,1847,1847,1848,1848,1848,1849,1849,1849,1850,1850,1850,1851,1851,1851,1852,1852,1852,1855,1855,1855,1855,1855,1855,1855,1855,1855,1855,2125,2125,2125,2125,2125,2126,2126,2126";
        val result = "1753,2020,2027,1804,2022,1807,1810,1813,1816,1819,1821,1823,1825,2024,1828,1829,1831,1833,1835,1837,1839,1754,1755,1757,1760,1764,1765,1767,1770,1774,1775,1777,1780,1784,1785,1787,1790,1794,1795,1797,1800,1841,1842,1853,1854,2019,2026,2123,2124,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2028,2028,2028,2028,2028,2028,2028,2028,2023,2023,1805,1805,1805,1805,1805,1805,1805,1805,1805,1805,2025,2025,2025,2025,1806,1806,1806,1806,1808,1808,1808,1808,1808,1808,1808,1808,1808,1808,1809,1809,1809,1809,1811,1811,1811,1811,1811,1811,1811,1811,1811,1811,1812,1812,1812,1812,1814,1814,1814,1814,1814,1814,1814,1814,1814,1814,1815,1815,1815,1815,1817,1817,1817,1817,1817,1817,1817,1817,1817,1817,1818,1818,1818,1818,1820,1820,1820,1820,1820,1822,1822,1822,1822,1822,1824,1824,1824,1824,1824,1826,1826,1826,1826,1827,1827,1827,1830,1830,1830,1830,1832,1832,1832,1832,1834,1834,1834,1834,1836,1836,1836,1836,1838,1838,1838,1838,1840,1840,1840,1840,1756,1756,1756,1756,1756,1756,1756,1756,1756,1756,1758,1758,1758,1758,1759,1759,1759,1759,1761,1761,1761,1761,1761,1762,1762,1762,1762,1762,1763,1763,1763,1763,1763,1766,1766,1766,1766,1766,1766,1766,1766,1766,1766,1768,1768,1768,1768,1769,1769,1769,1769,1771,1771,1771,1771,1771,1772,1772,1772,1772,1772,1773,1773,1773,1773,1773,1776,1776,1776,1776,1776,1776,1776,1776,1776,1776,1778,1778,1778,1778,1779,1779,1779,1779,1781,1781,1781,1781,1781,1782,1782,1782,1782,1782,1783,1783,1783,1783,1783,1786,1786,1786,1786,1786,1786,1786,1786,1786,1786,1788,1788,1788,1788,1789,1789,1789,1789,1791,1791,1791,1791,1791,1792,1792,1792,1792,1792,1793,1793,1793,1793,1793,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1798,1798,1798,1798,1799,1799,1799,1799,1801,1801,1801,1801,1801,1802,1802,1802,1802,1802,1803,1803,1803,1803,1803,1843,1843,1843,1844,1844,1844,1845,1845,1845,1846,1846,1846,1847,1847,1847,1848,1848,1848,1849,1849,1849,1850,1850,1850,1851,1851,1851,1852,1852,1852,1855,1855,1855,1855,1855,1855,1855,1855,1855,1855,2125,2125,2125,2125,2125,2126,2126,2126";
        val result2 = "1753,2020,2027,1804,2022,1807,1810,1813,1816,1819,1821,1823,1825,2024,1828,1829,1831,1833,1835,1837,1839,1754,1755,1757,1760,1764,1765,1767,1770,1774,1775,1777,1780,1784,1785,1787,1790,1794,1795,1797,1800,1841,1842,1853,1854,2019,2026,2123,2124,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2028,2028,2028,2028,2028,2028,2028,2028,2023,2023,1805,1805,1805,1805,1805,1805,1805,1805,1805,1805,2025,2025,2025,2025,1806,1806,1806,1806,1808,1808,1808,1808,1808,1808,1808,1808,1808,1808,1809,1809,1809,1809,1811,1811,1811,1811,1811,1811,1811,1811,1811,1811,1812,1812,1812,1812,1814,1814,1814,1814,1814,1814,1814,1814,1814,1814,1815,1815,1815,1815,1817,1817,1817,1817,1817,1817,1817,1817,1817,1817,1818,1818,1818,1818,1820,1820,1820,1820,1820,1822,1822,1822,1822,1822,1824,1824,1824,1824,1824,1826,1826,1826,1826,1827,1827,1827,1830,1830,1830,1830,1832,1832,1832,1832,1834,1834,1834,1834,1836,1836,1836,1836,1838,1838,1838,1838,1840,1840,1840,1840,1756,1756,1756,1756,1756,1756,1756,1756,1756,1756,1758,1758,1758,1758,1759,1759,1759,1759,1761,1761,1761,1761,1761,1762,1762,1762,1762,1762,1763,1763,1763,1763,1763,1766,1766,1766,1766,1766,1766,1766,1766,1766,1766,1768,1768,1768,1768,1769,1769,1769,1769,1771,1771,1771,1771,1771,1772,1772,1772,1772,1772,1773,1773,1773,1773,1773,1776,1776,1776,1776,1776,1776,1776,1776,1776,1776,1778,1778,1778,1778,1779,1779,1779,1779,1781,1781,1781,1781,1781,1782,1782,1782,1782,1782,1783,1783,1783,1783,1783,1786,1786,1786,1786,1786,1786,1786,1786,1786,1786,1788,1788,1788,1788,1789,1789,1789,1789,1791,1791,1791,1791,1791,1792,1792,1792,1792,1792,1793,1793,1793,1793,1793,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1798,1798,1798,1798,1799,1799,1799,1799,1801,1801,1801,1801,1801,1802,1802,1802,1802,1802,1803,1803,1803,1803,1803,1843,1843,1843,1844,1844,1844,1845,1845,1845,1846,1846,1846,1847,1847,1847,1848,1848,1848,1849,1849,1849,1850,1850,1850,1851,1851,1851,1852,1852,1852,1855,1855,1855,1855,1855,1855,1855,1855,1855,1855,2125,2125,2125,2125,2125,2126,2126,2126";
        val result3 = "1753,2020,2027,1804,2022,1807,1810,1813,1816,1819,1821,1823,1825,2024,1828,1829,1831,1833,1835,1837,1839,1754,1755,1757,1760,1764,1765,1767,1770,1774,1775,1777,1780,1784,1785,1787,1790,1794,1795,1797,1800,1841,1842,1853,1854,2019,2026,2123,2124,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2028,2028,2028,2028,2028,2028,2028,2028,2023,2023,1805,1805,1805,1805,1805,1805,1805,1805,1805,1805,2025,2025,2025,2025,1806,1806,1806,1806,1808,1808,1808,1808,1808,1808,1808,1808,1808,1808,1809,1809,1809,1809,1811,1811,1811,1811,1811,1811,1811,1811,1811,1811,1812,1812,1812,1812,1814,1814,1814,1814,1814,1814,1814,1814,1814,1814,1815,1815,1815,1815,1817,1817,1817,1817,1817,1817,1817,1817,1817,1817,1818,1818,1818,1818,1820,1820,1820,1820,1820,1822,1822,1822,1822,1822,1824,1824,1824,1824,1824,1826,1826,1826,1826,1827,1827,1827,1830,1830,1830,1830,1832,1832,1832,1832,1834,1834,1834,1834,1836,1836,1836,1836,1838,1838,1838,1838,1840,1840,1840,1840,1756,1756,1756,1756,1756,1756,1756,1756,1756,1756,1758,1758,1758,1758,1759,1759,1759,1759,1761,1761,1761,1761,1761,1762,1762,1762,1762,1762,1763,1763,1763,1763,1763,1766,1766,1766,1766,1766,1766,1766,1766,1766,1766,1768,1768,1768,1768,1769,1769,1769,1769,1771,1771,1771,1771,1771,1772,1772,1772,1772,1772,1773,1773,1773,1773,1773,1776,1776,1776,1776,1776,1776,1776,1776,1776,1776,1778,1778,1778,1778,1779,1779,1779,1779,1781,1781,1781,1781,1781,1782,1782,1782,1782,1782,1783,1783,1783,1783,1783,1786,1786,1786,1786,1786,1786,1786,1786,1786,1786,1788,1788,1788,1788,1789,1789,1789,1789,1791,1791,1791,1791,1791,1792,1792,1792,1792,1792,1793,1793,1793,1793,1793,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1798,1798,1798,1798,1799,1799,1799,1799,1801,1801,1801,1801,1801,1802,1802,1802,1802,1802,1803,1803,1803,1803,1803,1843,1843,1843,1844,1844,1844,1845,1845,1845,1846,1846,1846,1847,1847,1847,1848,1848,1848,1849,1849,1849,1850,1850,1850,1851,1851,1851,1852,1852,1852,1855,1855,1855,1855,1855,1855,1855,1855,1855,1855,2125,2125,2125,2125,2125,2126,2126,2126";

        Assertions.assertEquals(expected, result);
        Assertions.assertEquals(expected, result2);
        Assertions.assertEquals(expected, result3);
    }

    @Test
    public void test_bigDecimal_rounding() {
        var numerator = new BigDecimal("5000");
        var denominator = new BigDecimal("3000");

        System.out.println(1.6666666);
        System.out.println("ROUND CEILING (考慮正負) : " + numerator.divide(denominator, RoundingMode.CEILING));
        System.out.println("ROUND FLOOR (考慮正負) : " + numerator.divide(denominator, RoundingMode.FLOOR));
        System.out.println("ROUND DOWN (無條件捨去) : " + numerator.divide(denominator, RoundingMode.DOWN));
        System.out.println("ROUND UP (無條件進位) : " + numerator.divide(denominator, RoundingMode.UP));
        System.out.println("ROUND HALF_UP (四捨五入) : " + numerator.divide(denominator, RoundingMode.HALF_UP));

        numerator = new BigDecimal("-5000");
        denominator = new BigDecimal("3000");

        System.out.println(-1.6666666);
        System.out.println("ROUND CEILING (考慮正負) : " + numerator.divide(denominator, RoundingMode.CEILING));
        System.out.println("ROUND FLOOR (考慮正負) : " + numerator.divide(denominator, RoundingMode.FLOOR));
        System.out.println("ROUND DOWN (無條件捨去) : " + numerator.divide(denominator, RoundingMode.DOWN));
        System.out.println("ROUND UP (無條件進位) : " + numerator.divide(denominator, RoundingMode.UP));
        System.out.println("ROUND HALF_UP (四捨五入) : " + numerator.divide(denominator, RoundingMode.HALF_UP));

        numerator = new BigDecimal("5000");
        denominator = new BigDecimal("4000");

        System.out.println(1.25);
        System.out.println("ROUND CEILING (考慮正負) : " + numerator.divide(denominator, RoundingMode.CEILING));
        System.out.println("ROUND FLOOR (考慮正負) : " + numerator.divide(denominator, RoundingMode.FLOOR));
        System.out.println("ROUND DOWN (無條件捨去) : " + numerator.divide(denominator, RoundingMode.DOWN));
        System.out.println("ROUND UP (無條件進位) : " + numerator.divide(denominator, RoundingMode.UP));
        System.out.println("ROUND HALF_UP (四捨五入) : " + numerator.divide(denominator, RoundingMode.HALF_UP));

        numerator = new BigDecimal("-5000");
        denominator = new BigDecimal("4000");

        System.out.println(-1.25);
        System.out.println("ROUND CEILING (考慮正負) : " + numerator.divide(denominator, RoundingMode.CEILING));
        System.out.println("ROUND FLOOR (考慮正負) : " + numerator.divide(denominator, RoundingMode.FLOOR));
        System.out.println("ROUND DOWN (無條件捨去) : " + numerator.divide(denominator, RoundingMode.DOWN));
        System.out.println("ROUND UP (無條件進位) : " + numerator.divide(denominator, RoundingMode.UP));
        System.out.println("ROUND HALF_UP (四捨五入) : " + numerator.divide(denominator, RoundingMode.HALF_UP));
    }


}
